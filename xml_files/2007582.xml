<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF:Small:Making Effect Systems Practical with Polymorphism, Inference, and Prototyping Support</AwardTitle>
<AwardEffectiveDate>06/15/2020</AwardEffectiveDate>
<AwardExpirationDate>05/31/2023</AwardExpirationDate>
<AwardTotalIntnAmount>362028.00</AwardTotalIntnAmount>
<AwardAmount>362028</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Effect systems are extensions to the type system in a programming language that aid in checking aspects of how a program behaves, for example whether it uses concurrency constructs safely, or respects certain kinds of security policies. The most popular example is the notion of checked exceptions built into the Java programming language.  Yet despite many years of research experience with effect systems, they are not widely used outside Java.  This project pursues work to make effect systems easier to design, easier to implement, and easier for regular developers to apply to programs to prevent bugs. The project investigates both the theory of effect systems, such as how to extend them to non-trivial programming constructs like exceptions and generators, and their application.  &lt;br/&gt;&lt;br/&gt;The project implements and applies a variety of effect systems to substantial real-world programs written in Java, using experience with that empirical evaluation to guide improvements to the theory of effect systems, focusing in particular on lightweight ways to accommodate code reuse and effect polymorphism without requiring excessive guidance from developers.  The project constructs an open-source implementation framework for effect systems, which will make it easier to implement new effect systems.  The project validates the framework by building open-source implementations of previously proposed and new effect systems for Java, providing tools directly useful to practicing developers.  Furthermore, the project develops generic inference techniques to automatically deduce effects for many effect systems, further reducing the effort required to design, implement, and use them.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>06/04/2020</MinAmdLetterDate>
<MaxAmdLetterDate>06/04/2020</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>2007582</AwardID>
<Investigator>
<FirstName>Colin</FirstName>
<LastName>Gordon</LastName>
<EmailAddress>csg63@drexel.edu</EmailAddress>
<StartDate>06/04/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Drexel University</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191021119</ZipCode>
<PhoneNumber>2158955849</PhoneNumber>
<StreetAddress>1505 Race St, 10th Floor</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
</Award>
</rootTag>
