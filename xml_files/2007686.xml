<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: A Mechanism for Extending A Programming Language with Interactive Syntax</AwardTitle>
<AwardEffectiveDate>07/01/2020</AwardEffectiveDate>
<AwardExpirationDate>06/30/2023</AwardExpirationDate>
<AwardTotalIntnAmount>449948.00</AwardTotalIntnAmount>
<AwardAmount>449948</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Software developers write programs as linear text. At the moment, this way of programming is the dominant way of instructing computers in industry. While the computer does not care in which format instructions are entered, the format greatly matters to the developer who must read a program many months later to understand and improve the code.  The problem is that a good amount of this linear program text describes geometric relationships among different pieces of the program's problem domain, say a piece of a map or a tabular arrangement of information. No effort on the part of a software developer can ever express such relationships in a textual way that makes them easy to decipher. The goal of this project is to demonstrate that form of textual-visual programming will greatly improve the communication between developers across time.&lt;br/&gt;&lt;br/&gt;The project develops a mechanism for supplementing textual programming languages with visual and interactive elements: miniature graphical user interfaces (GUIs).  Using this mechanism, developers can create mini GUIs for specific problem domains such as, for example, two-dimension tables of conditional actions. Other developers add instances of these mini-GUIs to their code and interact with them to enter specific details. When the code is supposed to be run, the translator collaborates with these visual elements to render them as ordinary instructions. When the code is to be read, the visual nature expresses the geometric relationships much more directly than linear text. The project team will evaluate the mechanism across several dozen application areas.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>06/10/2020</MinAmdLetterDate>
<MaxAmdLetterDate>06/10/2020</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>2007686</AwardID>
<Investigator>
<FirstName>Matthias</FirstName>
<LastName>Felleisen</LastName>
<EmailAddress>matthias@ccs.neu.edu</EmailAddress>
<StartDate>06/10/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Northeastern University</Name>
<CityName>BOSTON</CityName>
<ZipCode>021155005</ZipCode>
<PhoneNumber>6173733004</PhoneNumber>
<StreetAddress>360 HUNTINGTON AVE</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
</Award>
</rootTag>
